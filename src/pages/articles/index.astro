---
import { getCollection } from 'astro:content';
import { Icon } from 'astro-icon/components';
import Layout from '../../layouts/Layout.astro';

const baseUrl = import.meta.env.BASE_URL || "/";

// Get all articles, sorted by publish date (newest first)
const articles = (await getCollection('articles'))
  .filter(article => !article.data.draft)
  .sort((a, b) => new Date(b.data.publishDate).getTime() - new Date(a.data.publishDate).getTime());

// Get all unique tags for filtering
const allTags = [...new Set(articles.flatMap(article => article.data.tags || []))].sort();

const pageTitle = "Articles";
const pageDescription = "Read the latest articles about piano technique, practice tips, and Piano Fitness updates.";
---

<Layout 
  title={pageTitle}
  description={pageDescription}
  type="website"
>
  <div class="container mx-auto px-4 py-8 md:py-16 max-w-4xl">
    <!-- Page Header -->
    <div class="mb-12 text-center">
      <h1 class="text-3xl md:text-4xl lg:text-5xl font-bold mb-4 text-primary">{pageTitle}</h1>
      <p class="text-lg md:text-xl text-neutral-content/80 max-w-2xl mx-auto">
        {pageDescription}
      </p>
      
      <!-- RSS Feed Link -->
      <div class="mt-6">
        <a 
          href="/rss.xml" 
          class="inline-flex items-center gap-2 btn btn-outline btn-sm hover:btn-accent"
        >
          <Icon name="mdi:rss" size={16} class="text-accent" />
          Subscribe to RSS
        </a>
      </div>
    </div>

    <!-- Tags Filter Section -->
    {allTags.length > 0 && (
      <div class="mb-8">
        <h2 class="text-lg font-semibold mb-4 text-primary">Browse by Topic</h2>
        <div class="flex flex-wrap gap-2">
          {allTags.map((tag) => (
            <span class="badge badge-outline badge-lg cursor-pointer hover:badge-primary transition-colors">
              #{tag}
            </span>
          ))}
        </div>
      </div>
    )}

    <!-- Articles Grid -->
    <div class="grid gap-8">
      {articles.map((article) => {
        const { title, description, publishDate, author, tags } = article.data;
        const slug = article.slug;
        const formattedDate = new Date(publishDate).toLocaleDateString('en-US', {
          year: 'numeric',
          month: 'long',
          day: 'numeric'
        });

        return (
          <article class="bg-base-100 dark:bg-neutral-900 p-6 md:p-8 rounded-lg shadow-md hover:shadow-lg transition-shadow">
            <div class="flex flex-col h-full">
              <!-- Article Header -->
              <header class="mb-4">
                <h2 class="text-xl md:text-2xl font-semibold mb-2">
                  <a 
                    href={`${baseUrl}articles/${slug}`}
                    class="text-primary hover:text-primary/80 transition-colors"
                  >
                    {title}
                  </a>
                </h2>
                
                {description && (
                  <p class="text-neutral-content/70 mb-3">
                    {description}
                  </p>
                )}
              </header>

              <!-- Article Meta -->
              <div class="flex flex-wrap items-center gap-4 text-sm text-neutral-content/70 mb-4">
                {author && <span>By {author}</span>}
                <span>{formattedDate}</span>
              </div>

              <!-- Tags -->
              {tags && tags.length > 0 && (
                <div class="flex flex-wrap gap-2 mt-auto">
                  {tags.map((tag) => (
                    <span class="badge badge-secondary badge-sm">
                      {tag}
                    </span>
                  ))}
                </div>
              )}
            </div>
          </article>
        );
      })}
    </div>

    <!-- Empty State -->
    {articles.length === 0 && (
      <div class="text-center py-12">
        <p class="text-lg text-neutral-content/70">
          No articles published yet. Check back soon!
        </p>
      </div>
    )}
  </div>
</Layout>